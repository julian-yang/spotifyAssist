{"/Users/julianyang/Projects/test_heroku/src/app.ts": {"path":"/Users/julianyang/Projects/test_heroku/src/app.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":19},"end":{"line":6,"column":41}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":32}},"6":{"start":{"line":8,"column":14},"end":{"line":8,"column":30}},"7":{"start":{"line":9,"column":15},"end":{"line":9,"column":32}},"8":{"start":{"line":10,"column":14},"end":{"line":10,"column":38}},"9":{"start":{"line":11,"column":13},"end":{"line":11,"column":28}},"10":{"start":{"line":12,"column":25},"end":{"line":12,"column":53}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":40}},"12":{"start":{"line":16,"column":23},"end":{"line":16,"column":52}},"13":{"start":{"line":17,"column":22},"end":{"line":17,"column":50}},"14":{"start":{"line":18,"column":26},"end":{"line":18,"column":58}},"15":{"start":{"line":21,"column":12},"end":{"line":21,"column":21}},"16":{"start":{"line":23,"column":0},"end":{"line":23,"column":42}},"17":{"start":{"line":24,"column":0},"end":{"line":24,"column":51}},"18":{"start":{"line":25,"column":0},"end":{"line":25,"column":30}},"19":{"start":{"line":26,"column":0},"end":{"line":26,"column":23}},"20":{"start":{"line":27,"column":0},"end":{"line":27,"column":23}},"21":{"start":{"line":28,"column":0},"end":{"line":28,"column":27}},"22":{"start":{"line":29,"column":0},"end":{"line":29,"column":51}},"23":{"start":{"line":30,"column":0},"end":{"line":30,"column":28}},"24":{"start":{"line":31,"column":0},"end":{"line":35,"column":4}},"25":{"start":{"line":36,"column":0},"end":{"line":36,"column":17}},"26":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}},"27":{"start":{"line":38,"column":0},"end":{"line":38,"column":35}},"28":{"start":{"line":39,"column":0},"end":{"line":42,"column":3}},"29":{"start":{"line":40,"column":4},"end":{"line":40,"column":31}},"30":{"start":{"line":41,"column":4},"end":{"line":41,"column":11}},"31":{"start":{"line":43,"column":0},"end":{"line":57,"column":3}},"32":{"start":{"line":45,"column":4},"end":{"line":55,"column":5}},"33":{"start":{"line":50,"column":8},"end":{"line":50,"column":40}},"34":{"start":{"line":52,"column":9},"end":{"line":55,"column":5}},"35":{"start":{"line":54,"column":8},"end":{"line":54,"column":40}},"36":{"start":{"line":56,"column":4},"end":{"line":56,"column":11}},"37":{"start":{"line":58,"column":0},"end":{"line":58,"column":81}},"38":{"start":{"line":62,"column":0},"end":{"line":62,"column":35}},"39":{"start":{"line":63,"column":0},"end":{"line":63,"column":50}},"40":{"start":{"line":64,"column":0},"end":{"line":64,"column":52}},"41":{"start":{"line":68,"column":0},"end":{"line":68,"column":38}},"42":{"start":{"line":72,"column":0},"end":{"line":72,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":39,"column":8},"end":{"line":39,"column":9}},"loc":{"start":{"line":39,"column":28},"end":{"line":42,"column":1}},"line":39},"1":{"name":"(anonymous_1)","decl":{"start":{"line":43,"column":8},"end":{"line":43,"column":9}},"loc":{"start":{"line":43,"column":28},"end":{"line":57,"column":1}},"line":43}},"branchMap":{"0":{"loc":{"start":{"line":23,"column":16},"end":{"line":23,"column":40}},"type":"binary-expr","locations":[{"start":{"line":23,"column":16},"end":{"line":23,"column":32}},{"start":{"line":23,"column":36},"end":{"line":23,"column":40}}],"line":23},"1":{"loc":{"start":{"line":45,"column":4},"end":{"line":55,"column":5}},"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":55,"column":5}},{"start":{"line":45,"column":4},"end":{"line":55,"column":5}}],"line":45},"2":{"loc":{"start":{"line":45,"column":8},"end":{"line":49,"column":29}},"type":"binary-expr","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":17}},{"start":{"line":46,"column":8},"end":{"line":46,"column":29}},{"start":{"line":47,"column":8},"end":{"line":47,"column":30}},{"start":{"line":48,"column":8},"end":{"line":48,"column":34}},{"start":{"line":49,"column":8},"end":{"line":49,"column":29}}],"line":45},"3":{"loc":{"start":{"line":52,"column":9},"end":{"line":55,"column":5}},"type":"if","locations":[{"start":{"line":52,"column":9},"end":{"line":55,"column":5}},{"start":{"line":52,"column":9},"end":{"line":55,"column":5}}],"line":52},"4":{"loc":{"start":{"line":52,"column":13},"end":{"line":53,"column":30}},"type":"binary-expr","locations":[{"start":{"line":52,"column":13},"end":{"line":52,"column":21}},{"start":{"line":53,"column":8},"end":{"line":53,"column":30}}],"line":52}},"s":{"0":4,"1":4,"2":4,"3":4,"4":4,"5":4,"6":4,"7":4,"8":4,"9":4,"10":4,"11":4,"12":4,"13":4,"14":4,"15":4,"16":4,"17":4,"18":4,"19":4,"20":4,"21":4,"22":4,"23":4,"24":4,"25":4,"26":4,"27":4,"28":4,"29":5,"30":5,"31":4,"32":5,"33":5,"34":0,"35":0,"36":5,"37":4,"38":4,"39":4,"40":4,"41":4,"42":4},"f":{"0":5,"1":5},"b":{"0":[4,4],"1":[5,0],"2":[5,5,5,5,5],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"app.js","sourceRoot":"","sources":["app.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from \"express\";\nimport * as compression from \"compression\";  // compresses requests\nimport * as session from \"express-session\";\nimport * as bodyParser from \"body-parser\";\nimport * as logger from \"morgan\";\nimport * as lusca from \"lusca\";\nimport * as dotenv from \"dotenv\";\nimport * as flash from \"express-flash\";\nimport * as path from \"path\";\nimport * as expressValidator from \"express-validator\";\nimport * as bluebird from \"bluebird\";\n\n\n// Load environment variables from .env file, where API keys and passwords are configured\ndotenv.config({ path: \".env.example\" });\n\n// Controllers (route handlers)\nimport * as homeController from \"./controllers/home\";\nimport * as apiController from \"./controllers/api\";\nimport * as contactController from \"./controllers/contact\";\n\n\n// API keys and Passport configuration\n\n// Create Express server\nconst app = express();\n\n// Express configuration\napp.set(\"port\", process.env.PORT || 3000);\napp.set(\"views\", path.join(__dirname, \"../views\"));\napp.set(\"view engine\", \"pug\");\napp.use(compression());\napp.use(logger(\"dev\"));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(expressValidator());\napp.use(session({\n  resave: true,\n  saveUninitialized: true,\n  secret: process.env.SESSION_SECRET\n}));\napp.use(flash());\napp.use(lusca.xframe(\"SAMEORIGIN\"));\napp.use(lusca.xssProtection(true));\napp.use((req, res, next) => {\n  res.locals.user = req.user;\n  next();\n});\napp.use((req, res, next) => {\n  // After successful login, redirect back to the intended page\n  if (!req.user &&\n    req.path !== \"/login\" &&\n    req.path !== \"/signup\" &&\n    !req.path.match(/^\\/auth/) &&\n    !req.path.match(/\\./)) {\n    req.session.returnTo = req.path;\n  } else if (req.user &&\n    req.path == \"/account\") {\n    req.session.returnTo = req.path;\n  }\n  next();\n});\napp.use(express.static(path.join(__dirname, \"public\"), { maxAge: 31557600000 }));\n\n/**\n * Primary app routes.\n */\napp.get(\"/\", homeController.index);\napp.get(\"/contact\", contactController.getContact);\napp.post(\"/contact\", contactController.postContact);\n\n/**\n * API examples routes.\n */\napp.get(\"/api\", apiController.getApi);\n\n/**\n * OAuth authentication routes. (Sign in)\n */\n\nmodule.exports = app;"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"defd2be80daa88a6640fc4ce11328f1286db0762"}
,"/Users/julianyang/Projects/test_heroku/src/controllers/api.ts": {"path":"/Users/julianyang/Projects/test_heroku/src/controllers/api.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":14},"end":{"line":3,"column":32}},"2":{"start":{"line":8,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":9,"column":4},"end":{"line":11,"column":7}},"4":{"start":{"line":17,"column":0},"end":{"line":29,"column":2}},"5":{"start":{"line":18,"column":18},"end":{"line":18,"column":76}},"6":{"start":{"line":18,"column":50},"end":{"line":18,"column":75}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":44}},"8":{"start":{"line":20,"column":4},"end":{"line":28,"column":7}},"9":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"10":{"start":{"line":22,"column":12},"end":{"line":22,"column":29}},"11":{"start":{"line":24,"column":8},"end":{"line":27,"column":11}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":17},"end":{"line":8,"column":18}},"loc":{"start":{"line":8,"column":31},"end":{"line":12,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":22},"end":{"line":17,"column":23}},"loc":{"start":{"line":17,"column":42},"end":{"line":29,"column":1}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":39},"end":{"line":18,"column":40}},"loc":{"start":{"line":18,"column":50},"end":{"line":18,"column":75}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":108},"end":{"line":20,"column":109}},"loc":{"start":{"line":20,"column":126},"end":{"line":28,"column":5}},"line":20}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},{"start":{"line":21,"column":8},"end":{"line":23,"column":9}}],"line":21}},"s":{"0":4,"1":4,"2":4,"3":1,"4":4,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"f":{"0":1,"1":0,"2":0,"3":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"api.js","sourceRoot":"","sources":["api.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAIb,iCAAiC;AAIjC;;;GAGG;AACQ,QAAA,MAAM,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IAClD,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE;QACtB,KAAK,EAAE,cAAc;KACtB,CAAC,CAAC;AACL,CAAC,CAAC;AAEF;;;GAGG;AACQ,QAAA,WAAW,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC3E,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAU,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;IAC9E,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IACxC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,wEAAwE,EAAE,CAAC,GAAU,EAAE,OAA2B,EAAE,EAAE;QAClJ,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAAC,CAAC;QAC9B,GAAG,CAAC,MAAM,CAAC,cAAc,EAAE;YACzB,KAAK,EAAE,cAAc;YACrB,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["\"use strict\";\n\nimport * as async from \"async\";\nimport * as request from \"request\";\nimport * as graph from \"fbgraph\";\nimport { Response, Request, NextFunction } from \"express\";\n\n\n/**\n * GET /api\n * List of API examples.\n */\nexport let getApi = (req: Request, res: Response) => {\n  res.render(\"api/index\", {\n    title: \"API Examples\"\n  });\n};\n\n/**\n * GET /api/facebook\n * Facebook API example.\n */\nexport let getFacebook = (req: Request, res: Response, next: NextFunction) => {\n  const token = req.user.tokens.find((token: any) => token.kind === \"facebook\");\n  graph.setAccessToken(token.accessToken);\n  graph.get(`${req.user.facebook}?fields=id,name,email,first_name,last_name,gender,link,locale,timezone`, (err: Error, results: graph.FacebookUser) => {\n    if (err) { return next(err); }\n    res.render(\"api/facebook\", {\n      title: \"Facebook API\",\n      profile: results\n    });\n  });\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"bade4dbc54a051caf8b0b1f94925198871c687ac"}
,"/Users/julianyang/Projects/test_heroku/src/controllers/contact.ts": {"path":"/Users/julianyang/Projects/test_heroku/src/controllers/contact.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":19},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":20},"end":{"line":10,"column":2}},"3":{"start":{"line":15,"column":0},"end":{"line":19,"column":2}},"4":{"start":{"line":16,"column":4},"end":{"line":18,"column":7}},"5":{"start":{"line":24,"column":0},"end":{"line":47,"column":2}},"6":{"start":{"line":25,"column":4},"end":{"line":25,"column":58}},"7":{"start":{"line":26,"column":4},"end":{"line":26,"column":56}},"8":{"start":{"line":27,"column":4},"end":{"line":27,"column":64}},"9":{"start":{"line":28,"column":19},"end":{"line":28,"column":41}},"10":{"start":{"line":29,"column":4},"end":{"line":32,"column":5}},"11":{"start":{"line":30,"column":8},"end":{"line":30,"column":36}},"12":{"start":{"line":31,"column":8},"end":{"line":31,"column":40}},"13":{"start":{"line":33,"column":24},"end":{"line":38,"column":5}},"14":{"start":{"line":39,"column":4},"end":{"line":46,"column":7}},"15":{"start":{"line":40,"column":8},"end":{"line":43,"column":9}},"16":{"start":{"line":41,"column":12},"end":{"line":41,"column":54}},"17":{"start":{"line":42,"column":12},"end":{"line":42,"column":44}},"18":{"start":{"line":44,"column":8},"end":{"line":44,"column":75}},"19":{"start":{"line":45,"column":8},"end":{"line":45,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":21},"end":{"line":15,"column":22}},"loc":{"start":{"line":15,"column":35},"end":{"line":19,"column":1}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":22},"end":{"line":24,"column":23}},"loc":{"start":{"line":24,"column":36},"end":{"line":47,"column":1}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":39,"column":38},"end":{"line":39,"column":39}},"loc":{"start":{"line":39,"column":47},"end":{"line":46,"column":5}},"line":39}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":4},"end":{"line":32,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":32,"column":5}},{"start":{"line":29,"column":4},"end":{"line":32,"column":5}}],"line":29},"1":{"loc":{"start":{"line":40,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":43,"column":9}},{"start":{"line":40,"column":8},"end":{"line":43,"column":9}}],"line":40}},"s":{"0":4,"1":4,"2":4,"3":4,"4":1,"5":4,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"f":{"0":1,"1":1,"2":0},"b":{"0":[1,0],"1":[0,0]},"inputSourceMap":{"version":3,"file":"contact.js","sourceRoot":"","sources":["contact.ts"],"names":[],"mappings":";;AAAA,yCAAyC;AAGzC,MAAM,WAAW,GAAG,UAAU,CAAC,eAAe,CAAC;IAC7C,OAAO,EAAE,UAAU;IACnB,IAAI,EAAE;QACJ,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa;QAC/B,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB;KACpC;CACF,CAAC,CAAC;AAEH;;;GAGG;AACQ,QAAA,UAAU,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACtD,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;QACpB,KAAK,EAAE,SAAS;KACjB,CAAC,CAAC;AACL,CAAC,CAAC;AAEF;;;GAGG;AACQ,QAAA,WAAW,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACvD,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC,QAAQ,EAAE,CAAC;IACtD,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,oBAAoB,CAAC,CAAC,OAAO,EAAE,CAAC;IACpD,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,yBAAyB,CAAC,CAAC,QAAQ,EAAE,CAAC;IAE5D,MAAM,MAAM,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;IAEtC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACX,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC5B,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAClC,CAAC;IAED,MAAM,WAAW,GAAG;QAClB,EAAE,EAAE,gBAAgB;QACpB,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG;QAC5C,OAAO,EAAE,cAAc;QACvB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;KACvB,CAAC;IAEF,WAAW,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,EAAE;QACxC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACR,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC1C,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAClC,CAAC;QACD,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,GAAG,EAAE,mCAAmC,EAAE,CAAC,CAAC;QACnE,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import * as nodemailer from \"nodemailer\";\nimport { Request, Response } from \"express\";\n\nconst transporter = nodemailer.createTransport({\n  service: \"SendGrid\",\n  auth: {\n    user: process.env.SENDGRID_USER,\n    pass: process.env.SENDGRID_PASSWORD\n  }\n});\n\n/**\n * GET /contact\n * Contact form page.\n */\nexport let getContact = (req: Request, res: Response) => {\n  res.render(\"contact\", {\n    title: \"Contact\"\n  });\n};\n\n/**\n * POST /contact\n * Send a contact form via Nodemailer.\n */\nexport let postContact = (req: Request, res: Response) => {\n  req.assert(\"name\", \"Name cannot be blank\").notEmpty();\n  req.assert(\"email\", \"Email is not valid\").isEmail();\n  req.assert(\"message\", \"Message cannot be blank\").notEmpty();\n\n  const errors = req.validationErrors();\n\n  if (errors) {\n    req.flash(\"errors\", errors);\n    return res.redirect(\"/contact\");\n  }\n\n  const mailOptions = {\n    to: \"your@email.com\",\n    from: `${req.body.name} <${req.body.email}>`,\n    subject: \"Contact Form\",\n    text: req.body.message\n  };\n\n  transporter.sendMail(mailOptions, (err) => {\n    if (err) {\n      req.flash(\"errors\", { msg: err.message });\n      return res.redirect(\"/contact\");\n    }\n    req.flash(\"success\", { msg: \"Email has been sent successfully!\" });\n    res.redirect(\"/contact\");\n  });\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"bf9a66f0a9163618abda0f646a12dd28cffcddda"}
,"/Users/julianyang/Projects/test_heroku/src/controllers/home.ts": {"path":"/Users/julianyang/Projects/test_heroku/src/controllers/home.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":7,"column":0},"end":{"line":11,"column":2}},"2":{"start":{"line":8,"column":4},"end":{"line":10,"column":7}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":16},"end":{"line":7,"column":17}},"loc":{"start":{"line":7,"column":30},"end":{"line":11,"column":1}},"line":7}},"branchMap":{},"s":{"0":4,"1":4,"2":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"home.js","sourceRoot":"","sources":["home.ts"],"names":[],"mappings":";;AAEA;;;GAGG;AACQ,QAAA,KAAK,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACjD,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACjB,KAAK,EAAE,MAAM;KACd,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { Request, Response } from \"express\";\n\n/**\n * GET /\n * Home page.\n */\nexport let index = (req: Request, res: Response) => {\n  res.render(\"home\", {\n    title: \"Home\"\n  });\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"1d9235fff73643e88f680b1453a7e6c96c67a843"}
}
