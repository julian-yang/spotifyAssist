{"/Users/julianyang/Projects/test_heroku/src/app.ts": {"path":"/Users/julianyang/Projects/test_heroku/src/app.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":19},"end":{"line":3,"column":41}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":32}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":34}},"5":{"start":{"line":7,"column":14},"end":{"line":7,"column":38}},"6":{"start":{"line":8,"column":16},"end":{"line":8,"column":42}},"7":{"start":{"line":9,"column":25},"end":{"line":9,"column":53}},"8":{"start":{"line":10,"column":14},"end":{"line":10,"column":30}},"9":{"start":{"line":11,"column":15},"end":{"line":11,"column":32}},"10":{"start":{"line":12,"column":13},"end":{"line":12,"column":28}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}},"12":{"start":{"line":17,"column":23},"end":{"line":17,"column":52}},"13":{"start":{"line":18,"column":22},"end":{"line":18,"column":50}},"14":{"start":{"line":19,"column":26},"end":{"line":19,"column":58}},"15":{"start":{"line":20,"column":33},"end":{"line":20,"column":65}},"16":{"start":{"line":22,"column":13},"end":{"line":22,"column":35}},"17":{"start":{"line":23,"column":0},"end":{"line":23,"column":22}},"18":{"start":{"line":31,"column":12},"end":{"line":31,"column":21}},"19":{"start":{"line":33,"column":0},"end":{"line":33,"column":42}},"20":{"start":{"line":34,"column":0},"end":{"line":34,"column":51}},"21":{"start":{"line":35,"column":0},"end":{"line":35,"column":30}},"22":{"start":{"line":36,"column":0},"end":{"line":36,"column":23}},"23":{"start":{"line":37,"column":0},"end":{"line":37,"column":23}},"24":{"start":{"line":38,"column":0},"end":{"line":38,"column":27}},"25":{"start":{"line":39,"column":0},"end":{"line":39,"column":51}},"26":{"start":{"line":40,"column":0},"end":{"line":40,"column":28}},"27":{"start":{"line":41,"column":0},"end":{"line":45,"column":4}},"28":{"start":{"line":46,"column":0},"end":{"line":46,"column":17}},"29":{"start":{"line":47,"column":0},"end":{"line":47,"column":36}},"30":{"start":{"line":48,"column":0},"end":{"line":48,"column":35}},"31":{"start":{"line":49,"column":0},"end":{"line":49,"column":81}},"32":{"start":{"line":53,"column":0},"end":{"line":53,"column":35}},"33":{"start":{"line":54,"column":0},"end":{"line":54,"column":50}},"34":{"start":{"line":55,"column":0},"end":{"line":55,"column":50}},"35":{"start":{"line":56,"column":0},"end":{"line":56,"column":52}},"36":{"start":{"line":60,"column":0},"end":{"line":60,"column":38}},"37":{"start":{"line":64,"column":0},"end":{"line":64,"column":21}}},"fnMap":{},"branchMap":{"0":{"loc":{"start":{"line":33,"column":16},"end":{"line":33,"column":40}},"type":"binary-expr","locations":[{"start":{"line":33,"column":16},"end":{"line":33,"column":32}},{"start":{"line":33,"column":36},"end":{"line":33,"column":40}}],"line":33}},"s":{"0":4,"1":4,"2":4,"3":4,"4":4,"5":4,"6":4,"7":4,"8":4,"9":4,"10":4,"11":4,"12":4,"13":4,"14":4,"15":4,"16":4,"17":4,"18":4,"19":4,"20":4,"21":4,"22":4,"23":4,"24":4,"25":4,"26":4,"27":4,"28":4,"29":4,"30":4,"31":4,"32":4,"33":4,"34":4,"35":4,"36":4,"37":4},"f":{},"b":{"0":[4,4]},"inputSourceMap":{"version":3,"file":"app.js","sourceRoot":"","sources":["app.ts"],"names":[],"mappings":";;AACA,0CAA0C;AAC1C,2CAA2C,CAAE,sBAAsB;AACnE,iCAAiC;AACjC,mCAAmC;AACnC,uCAAuC;AACvC,2CAA2C;AAC3C,sDAAsD;AACtD,+BAA+B;AAC/B,iCAAiC;AACjC,6BAA6B;AAG7B,8EAA8E;AAC9E,aAAa;AACb,MAAM,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;AAE9B,+BAA+B;AAC/B,qDAAqD;AACrD,mDAAmD;AACnD,2DAA2D;AAC3D,kEAAkE;AAElE,UAAU;AACV,oCAAsC;AAEtC,cAAS,CAAC,IAAI,EAAE,CAAC;AACjB,uBAAuB;AACvB,mEAAmE;AACnE,8DAA8D;AAC9D,oCAAoC;AACpC,SAAS;AAET,sCAAsC;AAEtC,wBAAwB;AACxB,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AAEtB,wBAAwB;AACxB,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;AAC1C,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC;AACnD,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;AAC9B,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;AACvB,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACvB,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;AACjD,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAC5B,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC;IACd,MAAM,EAAE,IAAI;IACZ,iBAAiB,EAAE,IAAI;IACvB,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc;CACnC,CAAC,CAAC,CAAC;AACJ,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;AACjB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;AACpC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;AACnC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,EAAE,EAAC,MAAM,EAAE,WAAW,EAAC,CAAC,CAAC,CAAC;AAE/E;;GAEG;AACH,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC;AACnC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,wBAAwB,CAAC,MAAM,CAAC,CAAC;AAClD,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,iBAAiB,CAAC,UAAU,CAAC,CAAC;AAClD,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,iBAAiB,CAAC,WAAW,CAAC,CAAC;AAEpD;;GAEG;AACH,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC;AAEtC;;GAEG;AAEH,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC","sourcesContent":["import * as bluebird from 'bluebird';\nimport * as bodyParser from 'body-parser';\nimport * as compression from 'compression';  // compresses requests\nimport * as dotenv from 'dotenv';\nimport * as express from 'express';\nimport * as flash from 'express-flash';\nimport * as session from 'express-session';\nimport * as expressValidator from 'express-validator';\nimport * as lusca from 'lusca';\nimport * as logger from 'morgan';\nimport * as path from 'path';\n\n\n// Load environment variables from .env file, where API keys and passwords are\n// configured\ndotenv.config({path: '.env'});\n\n// Controllers (route handlers)\nimport * as homeController from './controllers/home';\nimport * as apiController from './controllers/api';\nimport * as contactController from './controllers/contact';\nimport * as authenticationController from './auth/authentication';\n\n// Load db\nimport {sequelize} from './models/db';\nimport * as User from './models/user';\nsequelize.sync();\n// console.log('test');\n// sequelize.models.User.findOrCreate({where: {google_id: '1235'}})\n//    .spread((user: User.UserInstance, created: boolean) => {\n//      console.log(user.google_id);\n//    });\n\n// API keys and Passport configuration\n\n// Create Express server\nconst app = express();\n\n// Express configuration\napp.set('port', process.env.PORT || 5000);\napp.set('views', path.join(__dirname, '../views'));\napp.set('view engine', 'ejs');\napp.use(compression());\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(session({\n  resave: true,\n  saveUninitialized: true,\n  secret: process.env.SESSION_SECRET\n}));\napp.use(flash());\napp.use(lusca.xframe('SAMEORIGIN'));\napp.use(lusca.xssProtection(true));\napp.use(express.static(path.join(__dirname, 'public'), {maxAge: 31557600000}));\n\n/**\n * Primary app routes.\n */\napp.get('/', homeController.index);\napp.use('/auth', authenticationController.router);\napp.get('/contact', contactController.getContact);\napp.post('/contact', contactController.postContact);\n\n/**\n * API examples routes.\n */\napp.get('/api', apiController.getApi);\n\n/**\n * OAuth authentication routes. (Sign in)\n */\n\nmodule.exports = app;"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"3cb9d4cac9580997592462f98e5ce4c4b8ba3576"}
,"/Users/julianyang/Projects/test_heroku/src/auth/authentication.ts": {"path":"/Users/julianyang/Projects/test_heroku/src/auth/authentication.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":8,"column":7}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":97}},"3":{"start":{"line":4,"column":42},"end":{"line":4,"column":70}},"4":{"start":{"line":4,"column":85},"end":{"line":4,"column":95}},"5":{"start":{"line":5,"column":35},"end":{"line":5,"column":100}},"6":{"start":{"line":5,"column":41},"end":{"line":5,"column":73}},"7":{"start":{"line":5,"column":88},"end":{"line":5,"column":98}},"8":{"start":{"line":6,"column":32},"end":{"line":6,"column":149}},"9":{"start":{"line":6,"column":97},"end":{"line":6,"column":119}},"10":{"start":{"line":7,"column":8},"end":{"line":7,"column":78}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"12":{"start":{"line":11,"column":18},"end":{"line":11,"column":36}},"13":{"start":{"line":12,"column":30},"end":{"line":12,"column":60}},"14":{"start":{"line":13,"column":12},"end":{"line":13,"column":35}},"15":{"start":{"line":14,"column":14},"end":{"line":14,"column":28}},"16":{"start":{"line":15,"column":20},"end":{"line":15,"column":50}},"17":{"start":{"line":16,"column":11},"end":{"line":16,"column":34}},"18":{"start":{"line":17,"column":16},"end":{"line":17,"column":36}},"19":{"start":{"line":18,"column":14},"end":{"line":18,"column":32}},"20":{"start":{"line":19,"column":21},"end":{"line":21,"column":32}},"21":{"start":{"line":23,"column":31},"end":{"line":36,"column":1}},"22":{"start":{"line":24,"column":33},"end":{"line":24,"column":55}},"23":{"start":{"line":25,"column":23},"end":{"line":25,"column":83}},"24":{"start":{"line":26,"column":20},"end":{"line":34,"column":6}},"25":{"start":{"line":35,"column":4},"end":{"line":35,"column":26}},"26":{"start":{"line":39,"column":21},"end":{"line":39,"column":33}},"27":{"start":{"line":40,"column":21},"end":{"line":40,"column":33}},"28":{"start":{"line":41,"column":17},"end":{"line":41,"column":50}},"29":{"start":{"line":42,"column":24},"end":{"line":42,"column":76}},"30":{"start":{"line":43,"column":20},"end":{"line":43,"column":73}},"31":{"start":{"line":44,"column":4},"end":{"line":44,"column":42}},"32":{"start":{"line":47,"column":4},"end":{"line":78,"column":7}},"33":{"start":{"line":48,"column":24},"end":{"line":48,"column":40}},"34":{"start":{"line":49,"column":22},"end":{"line":49,"column":36}},"35":{"start":{"line":50,"column":28},"end":{"line":50,"column":48}},"36":{"start":{"line":51,"column":25},"end":{"line":51,"column":42}},"37":{"start":{"line":53,"column":8},"end":{"line":77,"column":9}},"38":{"start":{"line":54,"column":27},"end":{"line":57,"column":14}},"39":{"start":{"line":58,"column":29},"end":{"line":58,"column":47}},"40":{"start":{"line":59,"column":12},"end":{"line":59,"column":49}},"41":{"start":{"line":61,"column":25},"end":{"line":61,"column":99}},"42":{"start":{"line":62,"column":33},"end":{"line":62,"column":92}},"43":{"start":{"line":65,"column":12},"end":{"line":73,"column":13}},"44":{"start":{"line":66,"column":16},"end":{"line":66,"column":32}},"45":{"start":{"line":67,"column":16},"end":{"line":67,"column":56}},"46":{"start":{"line":72,"column":16},"end":{"line":72,"column":50}},"47":{"start":{"line":76,"column":12},"end":{"line":76,"column":57}},"48":{"start":{"line":81,"column":17},"end":{"line":81,"column":31}},"49":{"start":{"line":82,"column":18},"end":{"line":82,"column":33}},"50":{"start":{"line":83,"column":4},"end":{"line":83,"column":64}},"51":{"start":{"line":86,"column":4},"end":{"line":95,"column":7}},"52":{"start":{"line":88,"column":25},"end":{"line":88,"column":126}},"53":{"start":{"line":89,"column":36},"end":{"line":89,"column":75}},"54":{"start":{"line":90,"column":8},"end":{"line":90,"column":66}},"55":{"start":{"line":91,"column":8},"end":{"line":91,"column":77}},"56":{"start":{"line":92,"column":25},"end":{"line":92,"column":49}},"57":{"start":{"line":93,"column":8},"end":{"line":93,"column":30}},"58":{"start":{"line":94,"column":8},"end":{"line":94,"column":31}},"59":{"start":{"line":97,"column":0},"end":{"line":97,"column":40}},"60":{"start":{"line":99,"column":21},"end":{"line":99,"column":39}},"61":{"start":{"line":100,"column":25},"end":{"line":100,"column":47}},"62":{"start":{"line":101,"column":22},"end":{"line":101,"column":41}},"63":{"start":{"line":103,"column":23},"end":{"line":103,"column":77}},"64":{"start":{"line":104,"column":4},"end":{"line":104,"column":40}},"65":{"start":{"line":105,"column":26},"end":{"line":105,"column":60}},"66":{"start":{"line":106,"column":19},"end":{"line":106,"column":39}},"67":{"start":{"line":107,"column":4},"end":{"line":119,"column":5}},"68":{"start":{"line":109,"column":25},"end":{"line":109,"column":99}},"69":{"start":{"line":110,"column":8},"end":{"line":110,"column":27}},"70":{"start":{"line":112,"column":9},"end":{"line":119,"column":5}},"71":{"start":{"line":114,"column":25},"end":{"line":114,"column":100}},"72":{"start":{"line":115,"column":8},"end":{"line":115,"column":27}},"73":{"start":{"line":118,"column":8},"end":{"line":118,"column":57}},"74":{"start":{"line":122,"column":26},"end":{"line":122,"column":53}},"75":{"start":{"line":123,"column":27},"end":{"line":123,"column":59}},"76":{"start":{"line":124,"column":23},"end":{"line":126,"column":12}},"77":{"start":{"line":127,"column":4},"end":{"line":127,"column":57}},"78":{"start":{"line":130,"column":21},"end":{"line":134,"column":5}},"79":{"start":{"line":135,"column":4},"end":{"line":138,"column":5}},"80":{"start":{"line":136,"column":8},"end":{"line":137,"column":92}},"81":{"start":{"line":139,"column":4},"end":{"line":139,"column":20}},"82":{"start":{"line":141,"column":0},"end":{"line":141,"column":36}},"83":{"start":{"line":142,"column":0},"end":{"line":142,"column":42}},"84":{"start":{"line":143,"column":0},"end":{"line":143,"column":43}},"85":{"start":{"line":144,"column":0},"end":{"line":144,"column":50}},"86":{"start":{"line":145,"column":0},"end":{"line":145,"column":53}},"87":{"start":{"line":146,"column":0},"end":{"line":146,"column":68}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":36},"end":{"line":3,"column":37}},"loc":{"start":{"line":3,"column":63},"end":{"line":8,"column":5}},"line":3},"2":{"name":"fulfilled","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":34},"end":{"line":4,"column":99}},"line":4},"3":{"name":"rejected","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":102}},"line":5},"4":{"name":"step","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":151}},"line":6},"5":{"name":"(anonymous_5)","decl":{"start":{"line":6,"column":76},"end":{"line":6,"column":77}},"loc":{"start":{"line":6,"column":95},"end":{"line":6,"column":121}},"line":6},"6":{"name":"(anonymous_6)","decl":{"start":{"line":23,"column":31},"end":{"line":23,"column":32}},"loc":{"start":{"line":23,"column":45},"end":{"line":36,"column":1}},"line":23},"7":{"name":"testSignin","decl":{"start":{"line":38,"column":9},"end":{"line":38,"column":19}},"loc":{"start":{"line":38,"column":30},"end":{"line":45,"column":1}},"line":38},"8":{"name":"signinPost","decl":{"start":{"line":46,"column":9},"end":{"line":46,"column":19}},"loc":{"start":{"line":46,"column":30},"end":{"line":79,"column":1}},"line":46},"9":{"name":"(anonymous_9)","decl":{"start":{"line":47,"column":43},"end":{"line":47,"column":44}},"loc":{"start":{"line":47,"column":56},"end":{"line":78,"column":5}},"line":47},"10":{"name":"signinResult","decl":{"start":{"line":80,"column":9},"end":{"line":80,"column":21}},"loc":{"start":{"line":80,"column":32},"end":{"line":84,"column":1}},"line":80},"11":{"name":"returnAuthCode","decl":{"start":{"line":85,"column":9},"end":{"line":85,"column":23}},"loc":{"start":{"line":85,"column":43},"end":{"line":96,"column":1}},"line":85},"12":{"name":"(anonymous_12)","decl":{"start":{"line":86,"column":43},"end":{"line":86,"column":44}},"loc":{"start":{"line":86,"column":56},"end":{"line":95,"column":5}},"line":86},"13":{"name":"exchangeToken","decl":{"start":{"line":98,"column":9},"end":{"line":98,"column":22}},"loc":{"start":{"line":98,"column":33},"end":{"line":120,"column":1}},"line":98},"14":{"name":"isValidToken","decl":{"start":{"line":121,"column":9},"end":{"line":121,"column":21}},"loc":{"start":{"line":121,"column":58},"end":{"line":128,"column":1}},"line":121},"15":{"name":"buildTokenExchangeResponse","decl":{"start":{"line":129,"column":9},"end":{"line":129,"column":35}},"loc":{"start":{"line":129,"column":75},"end":{"line":140,"column":1}},"line":129}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":9,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"type":"binary-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":3,"column":17}},{"start":{"line":3,"column":22},"end":{"line":3,"column":33}}],"line":3},"2":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":148}},"type":"cond-expr","locations":[{"start":{"line":6,"column":46},"end":{"line":6,"column":67}},{"start":{"line":6,"column":70},"end":{"line":6,"column":148}}],"line":6},"3":{"loc":{"start":{"line":7,"column":51},"end":{"line":7,"column":67}},"type":"binary-expr","locations":[{"start":{"line":7,"column":51},"end":{"line":7,"column":61}},{"start":{"line":7,"column":65},"end":{"line":7,"column":67}}],"line":7},"4":{"loc":{"start":{"line":41,"column":17},"end":{"line":41,"column":50}},"type":"cond-expr","locations":[{"start":{"line":41,"column":38},"end":{"line":41,"column":45}},{"start":{"line":41,"column":48},"end":{"line":41,"column":50}}],"line":41},"5":{"loc":{"start":{"line":65,"column":12},"end":{"line":73,"column":13}},"type":"if","locations":[{"start":{"line":65,"column":12},"end":{"line":73,"column":13}},{"start":{"line":65,"column":12},"end":{"line":73,"column":13}}],"line":65},"6":{"loc":{"start":{"line":103,"column":23},"end":{"line":103,"column":77}},"type":"cond-expr","locations":[{"start":{"line":103,"column":39},"end":{"line":103,"column":52}},{"start":{"line":103,"column":55},"end":{"line":103,"column":77}}],"line":103},"7":{"loc":{"start":{"line":107,"column":4},"end":{"line":119,"column":5}},"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":119,"column":5}},{"start":{"line":107,"column":4},"end":{"line":119,"column":5}}],"line":107},"8":{"loc":{"start":{"line":107,"column":8},"end":{"line":108,"column":79}},"type":"binary-expr","locations":[{"start":{"line":107,"column":8},"end":{"line":107,"column":42}},{"start":{"line":108,"column":8},"end":{"line":108,"column":79}}],"line":107},"9":{"loc":{"start":{"line":112,"column":9},"end":{"line":119,"column":5}},"type":"if","locations":[{"start":{"line":112,"column":9},"end":{"line":119,"column":5}},{"start":{"line":112,"column":9},"end":{"line":119,"column":5}}],"line":112},"10":{"loc":{"start":{"line":112,"column":13},"end":{"line":113,"column":83}},"type":"binary-expr","locations":[{"start":{"line":112,"column":13},"end":{"line":112,"column":42}},{"start":{"line":113,"column":8},"end":{"line":113,"column":83}}],"line":112},"11":{"loc":{"start":{"line":124,"column":23},"end":{"line":126,"column":12}},"type":"cond-expr","locations":[{"start":{"line":125,"column":8},"end":{"line":125,"column":46}},{"start":{"line":126,"column":8},"end":{"line":126,"column":12}}],"line":124},"12":{"loc":{"start":{"line":127,"column":11},"end":{"line":127,"column":56}},"type":"binary-expr","locations":[{"start":{"line":127,"column":11},"end":{"line":127,"column":24}},{"start":{"line":127,"column":28},"end":{"line":127,"column":42}},{"start":{"line":127,"column":46},"end":{"line":127,"column":56}}],"line":127},"13":{"loc":{"start":{"line":135,"column":4},"end":{"line":138,"column":5}},"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":138,"column":5}},{"start":{"line":135,"column":4},"end":{"line":138,"column":5}}],"line":135}},"s":{"0":4,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":4,"12":4,"13":4,"14":4,"15":4,"16":4,"17":4,"18":4,"19":4,"20":4,"21":4,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":4,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":4,"83":4,"84":4,"85":4,"86":4,"87":4},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"0":[4,4,4],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0]},"inputSourceMap":{"version":3,"file":"authentication.js","sourceRoot":"","sources":["authentication.ts"],"names":[],"mappings":"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","sourcesContent":["import {NextFunction, Request, Response, Router} from 'express';\nimport {OAuth2Client} from 'google-auth-library';\nimport * as jwt from 'jsonwebtoken';\nimport {URL} from 'url';\n\nimport {GOOGLE_CALLBACK_URL, IS_DEV, TOKEN_TYPE} from '../config/constants';\nimport * as db from '../models/db';\n\nimport * as spotify from './spotify';\nimport * as token from './token';\n\nconst googleOauth2 = new OAuth2Client(\n    process.env.GOOGLE_CLIENT_ID,\n    process.env.GOOGLE_CLIENT_SECRET,\n    // Don't need this right now I think.\n    GOOGLE_CALLBACK_URL,\n);\n\n// Doesn't work right now.\nconst redirectToGoogleSignin = (req: Request, res: Response) => {\n  const assistantRedirectUrl = req.query.redirect_uri;\n  const stateToken =\n      jwt.sign(assistantRedirectUrl, process.env.JWT_TOKEN_SECRET);\n  const authUrl = googleOauth2.generateAuthUrl({\n    access_type: 'offline',\n    client_id: process.env.GOOGLE_CLIENT_ID,\n    include_granted_scopes: true,\n    prompt: 'select_account',\n    redirect_uri: GOOGLE_CALLBACK_URL,\n    scope: ['profile'],\n    state: stateToken\n  });\n  res.redirect(authUrl);\n};\n\n// for testing\nfunction testSignin(req: Request, res: Response): void {\n  const hostName = req.hostname;\n  const protocol = req.protocol;\n  const port = IS_DEV ? ':5000' : '';\n  const redirectUrl = `${protocol}://${hostName}${port}/auth/signinResult`;\n  const hrefUrl = `signin?client_id=google&redirect_uri=${redirectUrl}`;\n  res.render('signin', {redirectUrl});\n}\n\nasync function signinPost(req: Request, res: Response) {\n  const idtoken = req.body.idtoken;\n  const state = req.body.state;\n  const redirectUrl = req.body.redirectUrl;\n  const clientId = req.body.clientId;\n  // Verify the id_token, and access the claims.\n  try {\n    const ticket = await googleOauth2.verifyIdToken({\n      idToken: idtoken,\n      audience: process.env.GOOGLE_CLIENT_ID,\n    });\n\n    const googleId = ticket.getUserId();\n    console.log('googleId: ' + googleId);\n    // fetch/create user.\n    const user =\n        (await db.models.User.findOrCreate({where: {google_id: googleId}}))[0];\n    const authFlowInfo: AuthFlowInfo =\n        {userId: user.id, clientId: 'google', state, redirectUrl};\n\n    // if user does not have spotify credentials, redirect to spotify auth.\n    // else return auth codes\n    if (!user.spotify_access_token) {\n      req.user = user;\n      spotify.loginSpotify(authFlowInfo, res);\n    } else {\n      // get ten minutes from now.\n      // create new authorization\n      returnAuthCode(authFlowInfo, res);\n    }\n  } catch (err) {\n    console.log('Something went wrong!: ' + err);\n  }\n}\n\nfunction signinResult(req: Request, res: Response) {\n  const code = req.query.code;\n  const state = req.query.state;\n  res.render('signin_result', {authCodeToken: code, state});\n}\n\nexport interface AuthFlowInfo {\n  userId: number;\n  clientId: string;\n  state: string;\n  redirectUrl: string;\n}\n\nexport interface AuthFlowInfoWrapper { authFlowInfo: AuthFlowInfo; }\n\nexport async function returnAuthCode(\n    authCodeInfo: AuthFlowInfo, res: Response) {\n  // build redirect url\n  const authCode = token.generateTokenCode(\n      authCodeInfo.userId, authCodeInfo.clientId, TOKEN_TYPE.AUTH_CODE);\n  const completeRedirectUrl = new URL(authCodeInfo.redirectUrl);\n  completeRedirectUrl.searchParams.append('code', authCode);\n  completeRedirectUrl.searchParams.append('state', authCodeInfo.state);\n  const redirect = completeRedirectUrl.href;\n  console.log(redirect);\n  res.redirect(redirect);\n}\n\nfunction exchangeToken(req: Request, res: Response) {\n  const clientId = req.body.client_id;\n  const clientSecret = req.body.client_secret;\n  const grantType = req.body.grant_type;\n  // TODO: validate clientId && clientSecret pairing.\n  const inputToken = req.body.code ? req.body.code : req.body.refresh_token;\n  console.log(`token: ${inputToken}`);\n  const verifiedToken = token.decryptTokenCode(inputToken);\n\n  const userId = verifiedToken.userId;\n  if (grantType === 'authorization_code' &&\n      isValidToken(verifiedToken, clientId, TOKEN_TYPE.AUTH_CODE)) {\n    const response = buildTokenExchangeResponse(\n        userId, clientId, true /*includeRefreshToken*/);\n    res.json(response);\n  } else if (\n      grantType === 'refresh_token' &&\n      isValidToken(verifiedToken, clientId, TOKEN_TYPE.REFRESH_TOKEN)) {\n    const response = buildTokenExchangeResponse(\n        userId, clientId, false /*includeRefreshToken*/);\n    res.json(response);\n  } else {\n    res.status(400).json({error: 'invalid_grant'});\n  }\n}\n\nfunction isValidToken(\n    token: token.Token, clientId: string, expectedTokenType: TOKEN_TYPE) {\n  const validClientId = token.clientId === clientId;\n  const validTokenType = token.type === expectedTokenType;\n  const notExpired = expectedTokenType === TOKEN_TYPE.AUTH_CODE ?\n      token.expiresAt.getDate() > Date.now() :\n      true;\n  return validClientId && validTokenType && notExpired;\n}\n\ninterface TokenExchangeResponse {\n  token_type: string;\n  access_token: string;\n  expires_in: number;\n  refresh_token?: string;\n}\n\nfunction buildTokenExchangeResponse(\n    userId: number, clientId: string, includeRefreshToken: boolean) {\n  const response: TokenExchangeResponse = {\n    token_type: 'bearer',\n    access_token:\n        token.generateTokenCode(userId, clientId, TOKEN_TYPE.ACCESS_TOKEN),\n    expires_in: 60 * 60\n  };\n  if (includeRefreshToken) {\n    response.refresh_token =\n        token.generateTokenCode(userId, clientId, TOKEN_TYPE.REFRESH_TOKEN);\n  }\n  return response;\n}\n\nexport const router = Router();\nrouter.get('/signin', testSignin);\nrouter.post('/signin', signinPost);\nrouter.get('/signinResult', signinResult);\nrouter.post('/exchangeToken', exchangeToken);\nrouter.get('/spotifyCallback', spotify.processSpotifyLogin);\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"a1041b453119e16212318ec7cf8f6a778288a295"}
,"/Users/julianyang/Projects/test_heroku/src/auth/spotify.ts": {"path":"/Users/julianyang/Projects/test_heroku/src/auth/spotify.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":8,"column":7}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":97}},"3":{"start":{"line":4,"column":42},"end":{"line":4,"column":70}},"4":{"start":{"line":4,"column":85},"end":{"line":4,"column":95}},"5":{"start":{"line":5,"column":35},"end":{"line":5,"column":100}},"6":{"start":{"line":5,"column":41},"end":{"line":5,"column":73}},"7":{"start":{"line":5,"column":88},"end":{"line":5,"column":98}},"8":{"start":{"line":6,"column":32},"end":{"line":6,"column":149}},"9":{"start":{"line":6,"column":97},"end":{"line":6,"column":119}},"10":{"start":{"line":7,"column":8},"end":{"line":7,"column":78}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"12":{"start":{"line":11,"column":12},"end":{"line":11,"column":35}},"13":{"start":{"line":12,"column":20},"end":{"line":12,"column":43}},"14":{"start":{"line":13,"column":16},"end":{"line":13,"column":42}},"15":{"start":{"line":14,"column":18},"end":{"line":14,"column":48}},"16":{"start":{"line":15,"column":20},"end":{"line":15,"column":50}},"17":{"start":{"line":16,"column":11},"end":{"line":16,"column":34}},"18":{"start":{"line":17,"column":23},"end":{"line":17,"column":50}},"19":{"start":{"line":18,"column":22},"end":{"line":23,"column":1}},"20":{"start":{"line":24,"column":27},"end":{"line":24,"column":73}},"21":{"start":{"line":26,"column":18},"end":{"line":26,"column":70}},"22":{"start":{"line":27,"column":4},"end":{"line":27,"column":74}},"23":{"start":{"line":28,"column":24},"end":{"line":35,"column":6}},"24":{"start":{"line":36,"column":27},"end":{"line":36,"column":90}},"25":{"start":{"line":37,"column":4},"end":{"line":37,"column":70}},"26":{"start":{"line":38,"column":4},"end":{"line":38,"column":33}},"27":{"start":{"line":40,"column":0},"end":{"line":40,"column":36}},"28":{"start":{"line":43,"column":4},"end":{"line":58,"column":7}},"29":{"start":{"line":44,"column":21},"end":{"line":44,"column":35}},"30":{"start":{"line":45,"column":22},"end":{"line":45,"column":37}},"31":{"start":{"line":46,"column":29},"end":{"line":46,"column":76}},"32":{"start":{"line":47,"column":23},"end":{"line":47,"column":42}},"33":{"start":{"line":48,"column":30},"end":{"line":48,"column":56}},"34":{"start":{"line":50,"column":27},"end":{"line":50,"column":47}},"35":{"start":{"line":51,"column":8},"end":{"line":51,"column":82}},"36":{"start":{"line":52,"column":21},"end":{"line":52,"column":58}},"37":{"start":{"line":53,"column":8},"end":{"line":53,"column":63}},"38":{"start":{"line":54,"column":8},"end":{"line":54,"column":58}},"39":{"start":{"line":55,"column":8},"end":{"line":55,"column":65}},"40":{"start":{"line":56,"column":8},"end":{"line":56,"column":26}},"41":{"start":{"line":57,"column":8},"end":{"line":57,"column":57}},"42":{"start":{"line":60,"column":0},"end":{"line":60,"column":50}},"43":{"start":{"line":62,"column":4},"end":{"line":81,"column":7}},"44":{"start":{"line":63,"column":8},"end":{"line":63,"column":30}},"45":{"start":{"line":64,"column":24},"end":{"line":75,"column":9}},"46":{"start":{"line":76,"column":8},"end":{"line":76,"column":34}},"47":{"start":{"line":77,"column":20},"end":{"line":77,"column":42}},"48":{"start":{"line":79,"column":8},"end":{"line":79,"column":25}},"49":{"start":{"line":80,"column":8},"end":{"line":80,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":36},"end":{"line":3,"column":37}},"loc":{"start":{"line":3,"column":63},"end":{"line":8,"column":5}},"line":3},"2":{"name":"fulfilled","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":34},"end":{"line":4,"column":99}},"line":4},"3":{"name":"rejected","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":102}},"line":5},"4":{"name":"step","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":151}},"line":6},"5":{"name":"(anonymous_5)","decl":{"start":{"line":6,"column":76},"end":{"line":6,"column":77}},"loc":{"start":{"line":6,"column":95},"end":{"line":6,"column":121}},"line":6},"6":{"name":"loginSpotify","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":21}},"loc":{"start":{"line":25,"column":41},"end":{"line":39,"column":1}},"line":25},"7":{"name":"processSpotifyLogin","decl":{"start":{"line":42,"column":9},"end":{"line":42,"column":28}},"loc":{"start":{"line":42,"column":39},"end":{"line":59,"column":1}},"line":42},"8":{"name":"(anonymous_8)","decl":{"start":{"line":43,"column":43},"end":{"line":43,"column":44}},"loc":{"start":{"line":43,"column":56},"end":{"line":58,"column":5}},"line":43},"9":{"name":"retrieveTokens","decl":{"start":{"line":61,"column":9},"end":{"line":61,"column":23}},"loc":{"start":{"line":61,"column":34},"end":{"line":82,"column":1}},"line":61},"10":{"name":"(anonymous_10)","decl":{"start":{"line":62,"column":43},"end":{"line":62,"column":44}},"loc":{"start":{"line":62,"column":56},"end":{"line":81,"column":5}},"line":62}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":9,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"type":"binary-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":3,"column":17}},{"start":{"line":3,"column":22},"end":{"line":3,"column":33}}],"line":3},"2":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":148}},"type":"cond-expr","locations":[{"start":{"line":6,"column":46},"end":{"line":6,"column":67}},{"start":{"line":6,"column":70},"end":{"line":6,"column":148}}],"line":6},"3":{"loc":{"start":{"line":7,"column":51},"end":{"line":7,"column":67}},"type":"binary-expr","locations":[{"start":{"line":7,"column":51},"end":{"line":7,"column":61}},{"start":{"line":7,"column":65},"end":{"line":7,"column":67}}],"line":7}},"s":{"0":4,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":4,"12":4,"13":4,"14":4,"15":4,"16":4,"17":4,"18":4,"19":4,"20":4,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":4,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":4,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[4,4,4],"1":[0,0],"2":[0,0],"3":[0,0]},"inputSourceMap":{"version":3,"file":"spotify.js","sourceRoot":"","sources":["spotify.ts"],"names":[],"mappings":"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","sourcesContent":["import {NextFunction, Request, Response} from 'express';\nimport * as jwt from 'jsonwebtoken';\nimport * as querystring from 'query-string';\nimport {UriOptions} from 'request';\nimport * as request from 'request-promise';\nimport {RequestPromiseOptions} from 'request-promise';\n\nimport * as constants from '../config/constants';\nimport {SPOTIFY_BASE_AUTHORIZATION_URL, SPOTIFY_TOKEN_EXCHANGE} from '../config/constants';\nimport * as db from '../models/db';\nimport {UserInstance} from '../models/user';\n\nimport * as authentication from './authentication';\nimport {AuthFlowInfo, AuthFlowInfoWrapper} from './authentication';\n\ninterface SpotifyState {\n  user_google_id: string;\n}\n\ninterface SpotifyTokens {\n  access_token: string;\n  token_type: string;\n  scope: string;\n  expires_in: number;\n  refresh_token: string;\n}\n\nconst spotifyScopes = [\n  'playlist-read-private', 'playlist-modify-private', 'user-library-read',\n  'user-library-modify', 'user-read-playback-state',\n  'user-modify-playback-state', 'user-read-currently-playing',\n  'user-read-recently-played'\n];\n\nconst spotifyRedirectUri = constants.generateUrl('/auth/spotifyCallback');\n\nexport function loginSpotify(authFlowInfo: AuthFlowInfo, res: Response) {\n  const state = jwt.sign(authFlowInfo, process.env.JWT_TOKEN_SECRET);\n  console.log(`authorizing Spotify for user id ${authFlowInfo.userId}`);\n  const queryString = querystring.stringify({\n    client_id: process.env.SPOTIFY_CLIENT_ID,\n    response_type: 'code',\n    redirect_uri: spotifyRedirectUri,\n    state,\n    scope: spotifyScopes.join(' '),\n    show_dialog: true\n  });\n  const spotifyAuthUrl = `${SPOTIFY_BASE_AUTHORIZATION_URL}/?${queryString}`;\n  console.log(`Redirecting to Spotify Auth url: ${spotifyAuthUrl}`);\n  res.redirect(spotifyAuthUrl);\n}\n\n// TODO: handle error state.\nexport async function processSpotifyLogin(req: Request, res: Response) {\n  const code = req.query.code;\n  const token = req.query.state;\n  const authFlowInfo =\n      jwt.verify(token, process.env.JWT_TOKEN_SECRET) as AuthFlowInfo;\n  const userId = authFlowInfo.userId;\n  const spotifyTokens = await retrieveTokens(code);\n  // update user\n  const expiration = new Date(Date.now());\n  expiration.setSeconds(expiration.getSeconds() + spotifyTokens.expires_in);\n  const user = await db.models.User.findById(userId);\n  user.spotify_access_token = spotifyTokens.access_token;\n  user.spotify_access_token_expiration = expiration;\n  user.spotify_refresh_token = spotifyTokens.refresh_token;\n  await user.save();\n  authentication.returnAuthCode(authFlowInfo, res);\n}\n\nasync function retrieveTokens(authCode: string): Promise<SpotifyTokens> {\n  console.log(authCode);\n  const options: (UriOptions&RequestPromiseOptions) = {\n    uri: SPOTIFY_TOKEN_EXCHANGE,\n    method: 'POST',\n    form: {\n      grant_type: 'authorization_code',\n      code: authCode,\n      redirect_uri: spotifyRedirectUri,\n      client_id: process.env.SPOTIFY_CLIENT_ID,\n      client_secret: process.env.SPOTIFY_CLIENT_SECRET\n    },\n    json: true\n  };\n  console.log(options.body);\n  const res = await request(options);\n  // const res = await request.post(SPOTIFY_TOKEN_EXCHANGE, {form: })\n  console.log(res);\n  return res as SpotifyTokens;\n}"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"7e96819145f6fcab2c2efadfbcd095e8e40e13f3"}
,"/Users/julianyang/Projects/test_heroku/src/auth/token.ts": {"path":"/Users/julianyang/Projects/test_heroku/src/auth/token.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":12},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":50}},"4":{"start":{"line":6,"column":31},"end":{"line":6,"column":38}},"5":{"start":{"line":7,"column":28},"end":{"line":7,"column":35}},"6":{"start":{"line":9,"column":19},"end":{"line":9,"column":42}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":66}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":50}},"9":{"start":{"line":14,"column":17},"end":{"line":14,"column":37}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":49}},"11":{"start":{"line":16,"column":4},"end":{"line":16,"column":16}},"12":{"start":{"line":18,"column":0},"end":{"line":18,"column":46}},"13":{"start":{"line":20,"column":20},"end":{"line":20,"column":24}},"14":{"start":{"line":21,"column":4},"end":{"line":26,"column":5}},"15":{"start":{"line":22,"column":8},"end":{"line":22,"column":59}},"16":{"start":{"line":24,"column":9},"end":{"line":26,"column":5}},"17":{"start":{"line":25,"column":8},"end":{"line":25,"column":59}},"18":{"start":{"line":27,"column":18},"end":{"line":32,"column":5}},"19":{"start":{"line":33,"column":22},"end":{"line":33,"column":67}},"20":{"start":{"line":34,"column":4},"end":{"line":34,"column":21}},"21":{"start":{"line":36,"column":0},"end":{"line":36,"column":46}},"22":{"start":{"line":38,"column":4},"end":{"line":45,"column":5}},"23":{"start":{"line":39,"column":30},"end":{"line":39,"column":81}},"24":{"start":{"line":40,"column":8},"end":{"line":40,"column":29}},"25":{"start":{"line":43,"column":8},"end":{"line":43,"column":52}},"26":{"start":{"line":44,"column":8},"end":{"line":44,"column":19}},"27":{"start":{"line":47,"column":0},"end":{"line":47,"column":44}},"28":{"start":{"line":49,"column":18},"end":{"line":49,"column":45}},"29":{"start":{"line":50,"column":23},"end":{"line":50,"column":61}},"30":{"start":{"line":51,"column":26},"end":{"line":51,"column":76}},"31":{"start":{"line":52,"column":4},"end":{"line":52,"column":39}}},"fnMap":{"0":{"name":"generateRandomToken","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":28}},"loc":{"start":{"line":8,"column":31},"end":{"line":11,"column":1}},"line":8},"1":{"name":"getSecondsFromNow","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":26}},"loc":{"start":{"line":13,"column":36},"end":{"line":17,"column":1}},"line":13},"2":{"name":"generateTokenCode","decl":{"start":{"line":19,"column":9},"end":{"line":19,"column":26}},"loc":{"start":{"line":19,"column":51},"end":{"line":35,"column":1}},"line":19},"3":{"name":"decryptTokenCode","decl":{"start":{"line":37,"column":9},"end":{"line":37,"column":25}},"loc":{"start":{"line":37,"column":37},"end":{"line":46,"column":1}},"line":37},"4":{"name":"verifyValidAccessToken","decl":{"start":{"line":48,"column":9},"end":{"line":48,"column":31}},"loc":{"start":{"line":48,"column":43},"end":{"line":53,"column":1}},"line":48}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":4},"end":{"line":26,"column":5}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":26,"column":5}},{"start":{"line":21,"column":4},"end":{"line":26,"column":5}}],"line":21},"1":{"loc":{"start":{"line":24,"column":9},"end":{"line":26,"column":5}},"type":"if","locations":[{"start":{"line":24,"column":9},"end":{"line":26,"column":5}},{"start":{"line":24,"column":9},"end":{"line":26,"column":5}}],"line":24},"2":{"loc":{"start":{"line":52,"column":11},"end":{"line":52,"column":38}},"type":"binary-expr","locations":[{"start":{"line":52,"column":11},"end":{"line":52,"column":21}},{"start":{"line":52,"column":25},"end":{"line":52,"column":38}}],"line":52}},"s":{"0":4,"1":4,"2":4,"3":4,"4":4,"5":4,"6":0,"7":0,"8":4,"9":0,"10":0,"11":0,"12":4,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":4,"22":0,"23":0,"24":0,"25":0,"26":0,"27":4,"28":0,"29":0,"30":0,"31":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0]},"inputSourceMap":{"version":3,"file":"token.js","sourceRoot":"","sources":["token.ts"],"names":[],"mappings":";;AAAA,iCAAiC;AACjC,oCAAoC;AAEpC,mDAA+C;AAE/C,MAAM,sBAAsB,GAAG,EAAE,GAAG,EAAE,CAAC;AACvC,MAAM,mBAAmB,GAAG,EAAE,GAAG,EAAE,CAAC;AAEpC;IACE,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACvC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAChE,CAAC;AAHD,kDAGC;AASD,2BAAkC,OAAe;IAC/C,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAClC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,OAAO,CAAC,CAAC;IAC7C,MAAM,CAAC,IAAI,CAAC;AACd,CAAC;AAJD,8CAIC;AAED,2BACI,MAAc,EAAE,QAAgB,EAAE,IAAgB;IACpD,IAAI,SAAS,GAAG,IAAI,CAAC;IACrB,EAAE,CAAC,CAAC,IAAI,KAAK,sBAAU,CAAC,SAAS,CAAC,CAAC,CAAC;QAClC,SAAS,GAAG,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;IACrD,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,sBAAU,CAAC,YAAY,CAAC,CAAC,CAAC;QAC5C,SAAS,GAAG,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;IACrD,CAAC;IACD,MAAM,KAAK,GAAU;QACnB,IAAI;QACJ,MAAM;QACN,QAAQ;QACR,SAAS;KAEV,CAAC;IACF,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAChE,MAAM,CAAC,SAAS,CAAC;AACnB,CAAC;AAjBD,8CAiBC;AAED,0BAAiC,SAAiB;IAChD,IAAI,CAAC;QACH,MAAM,aAAa,GACf,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAU,CAAC;QACjE,MAAM,CAAC,aAAa,CAAC;IACvB,CAAC;IAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACb,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,EAAE,CAAC,CAAC;QAC5C,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;AACH,CAAC;AATD,4CASC;AAED,gCAAgC,SAAiB;IAC/C,MAAM,KAAK,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC;IAC1C,MAAM,UAAU,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAC1D,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,KAAK,sBAAU,CAAC,YAAY,CAAC;IAC7D,MAAM,CAAC,UAAU,IAAI,aAAa,CAAC;AACrC,CAAC","sourcesContent":["import * as crypto from 'crypto';\nimport * as jwt from 'jsonwebtoken';\n\nimport {TOKEN_TYPE} from '../config/constants';\n\nconst TEN_MINUTES_IN_SECONDS = 10 * 60;\nconst ONE_HOUR_IN_SECONDS = 60 * 60;\n\nexport function generateRandomToken() {\n  const buffer = crypto.randomBytes(256);\n  return crypto.createHash('sha1').update(buffer).digest('hex');\n}\n\nexport interface Token {\n  type: TOKEN_TYPE;\n  userId: number;\n  clientId: string;\n  expiresAt: Date;\n}\n\nexport function getSecondsFromNow(seconds: number) {\n  const date = new Date(Date.now());\n  date.setSeconds(date.getSeconds() + seconds);\n  return date;\n}\n\nexport function generateTokenCode(\n    userId: number, clientId: string, type: TOKEN_TYPE) {\n  let expiresAt = null;\n  if (type === TOKEN_TYPE.AUTH_CODE) {\n    expiresAt = getSecondsFromNow(ONE_HOUR_IN_SECONDS);\n  } else if (type === TOKEN_TYPE.ACCESS_TOKEN) {\n    expiresAt = getSecondsFromNow(ONE_HOUR_IN_SECONDS);\n  }\n  const token: Token = {\n    type,\n    userId,\n    clientId,\n    expiresAt,\n\n  };\n  const tokenCode = jwt.sign(token, process.env.JWT_TOKEN_SECRET);\n  return tokenCode;\n}\n\nexport function decryptTokenCode(tokenCode: string): Token {\n  try {\n    const verifiedToken =\n        jwt.verify(tokenCode, process.env.JWT_TOKEN_SECRET) as Token;\n    return verifiedToken;\n  } catch (err) {\n    console.log(`err decrypting token: ${err}`);\n    return err;\n  }\n}\n\nfunction verifyValidAccessToken(tokenCode: string) {\n  const token = decryptTokenCode(tokenCode);\n  const notExpired = token.expiresAt.getTime() > Date.now();\n  const isAccessToken = token.type === TOKEN_TYPE.ACCESS_TOKEN;\n  return notExpired && isAccessToken;\n}\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"a668b1707017fa81bae5ed0208319412aef0e435"}
,"/Users/julianyang/Projects/test_heroku/src/config/constants.ts": {"path":"/Users/julianyang/Projects/test_heroku/src/config/constants.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":45}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":33}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":82}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":74}},"5":{"start":{"line":8,"column":0},"end":{"line":12,"column":65}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":58}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":64}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":66}},"9":{"start":{"line":13,"column":15},"end":{"line":13,"column":96}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":31}},"11":{"start":{"line":17,"column":0},"end":{"line":17,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":1},"end":{"line":8,"column":2}},"loc":{"start":{"line":8,"column":23},"end":{"line":12,"column":1}},"line":8},"1":{"name":"generateUrl","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":20}},"loc":{"start":{"line":14,"column":28},"end":{"line":16,"column":1}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":16},"end":{"line":12,"column":63}},"type":"binary-expr","locations":[{"start":{"line":12,"column":16},"end":{"line":12,"column":34}},{"start":{"line":12,"column":39},"end":{"line":12,"column":62}}],"line":12},"1":{"loc":{"start":{"line":13,"column":15},"end":{"line":13,"column":96}},"type":"cond-expr","locations":[{"start":{"line":13,"column":32},"end":{"line":13,"column":55}},{"start":{"line":13,"column":58},"end":{"line":13,"column":96}}],"line":13}},"s":{"0":4,"1":4,"2":4,"3":4,"4":4,"5":4,"6":4,"7":4,"8":4,"9":4,"10":4,"11":4},"f":{"0":4,"1":4},"b":{"0":[4,4],"1":[4,0]},"inputSourceMap":{"version":3,"file":"constants.js","sourceRoot":"","sources":["constants.ts"],"names":[],"mappings":";;AAAa,QAAA,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,OAAO,CAAC;AAErC,QAAA,mBAAmB,GAAG,EAAE,CAAC;AAEzB,QAAA,8BAA8B,GACvC,wCAAwC,CAAC;AAChC,QAAA,sBAAsB,GAAG,wCAAwC,CAAC;AAC/E,IAAY,UAIX;AAJD,WAAY,UAAU;IACpB,qDAAS,CAAA;IACT,2DAAY,CAAA;IACZ,6DAAa,CAAA;AACf,CAAC,EAJW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAIrB;AAED,MAAM,MAAM,GACR,cAAM,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,sCAAsC,CAAC;AAE9E,qBAA4B,KAAa;IACvC,MAAM,CAAC,GAAG,MAAM,GAAG,KAAK,EAAE,CAAC;AAC7B,CAAC;AAFD,kCAEC","sourcesContent":["export const IS_DEV = process.env.ENV === 'LOCAL';\n\nexport const GOOGLE_CALLBACK_URL = '';\n\nexport const SPOTIFY_BASE_AUTHORIZATION_URL =\n    'https://accounts.spotify.com/authorize';\nexport const SPOTIFY_TOKEN_EXCHANGE = 'https://accounts.spotify.com/api/token';\nexport enum TOKEN_TYPE {\n  AUTH_CODE,\n  ACCESS_TOKEN,\n  REFRESH_TOKEN\n}\n\nconst domain =\n    IS_DEV ? 'http://localhost:5000' : 'https://spotify-assist.herokuapp.com';\n\nexport function generateUrl(route: string) {\n  return `${domain}${route}`;\n}"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"e2e9f7e670d1e9091158edbf9014154fd7f7d9d1"}
,"/Users/julianyang/Projects/test_heroku/src/controllers/api.ts": {"path":"/Users/julianyang/Projects/test_heroku/src/controllers/api.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":7,"column":0},"end":{"line":9,"column":2}},"2":{"start":{"line":8,"column":4},"end":{"line":8,"column":55}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":18}},"loc":{"start":{"line":7,"column":31},"end":{"line":9,"column":1}},"line":7}},"branchMap":{},"s":{"0":4,"1":4,"2":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"api.js","sourceRoot":"","sources":["api.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAQb;;;GAGG;AACQ,QAAA,MAAM,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IAClD,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,EAAC,KAAK,EAAE,cAAc,EAAC,CAAC,CAAC;AACnD,CAAC,CAAC","sourcesContent":["'use strict';\n\nimport * as async from 'async';\nimport * as request from 'request';\nimport * as graph from 'fbgraph';\nimport {Response, Request, NextFunction} from 'express';\n\n\n/**\n * GET /api\n * List of API examples.\n */\nexport let getApi = (req: Request, res: Response) => {\n  res.render('api/index', {title: 'API Examples'});\n};\n\n/**\n * GET /api/facebook\n * Facebook API example.\n */\n// export let getFacebook = (req: Request, res: Response, next: NextFunction) =>\n// {\n//   const token = req.user.tokens.find((token: {}) => token.kind ===\n//   'facebook'); graph.setAccessToken(token.accessToken); graph.get(\n//       `${\n//           req.user\n//               .facebook}?fields=id,name,email,first_name,last_name,gender,link,locale,timezone`,\n//       (err: Error, results: graph.FacebookUser) => {\n//         if (err) {\n//           return next(err);\n//         }\n//         res.render('api/facebook', {title: 'Facebook API', profile:\n//         results});\n//       });\n// };\n//"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"572a37ffa89709f7c0ff51f2d6fb7a2ef4092cfa"}
,"/Users/julianyang/Projects/test_heroku/src/controllers/contact.ts": {"path":"/Users/julianyang/Projects/test_heroku/src/controllers/contact.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":19},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":20},"end":{"line":7,"column":2}},"3":{"start":{"line":12,"column":0},"end":{"line":14,"column":2}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":48}},"5":{"start":{"line":19,"column":0},"end":{"line":42,"column":2}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":58}},"7":{"start":{"line":21,"column":4},"end":{"line":21,"column":56}},"8":{"start":{"line":22,"column":4},"end":{"line":22,"column":64}},"9":{"start":{"line":23,"column":19},"end":{"line":23,"column":41}},"10":{"start":{"line":24,"column":4},"end":{"line":27,"column":5}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":36}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":40}},"13":{"start":{"line":28,"column":24},"end":{"line":33,"column":5}},"14":{"start":{"line":34,"column":4},"end":{"line":41,"column":7}},"15":{"start":{"line":35,"column":8},"end":{"line":38,"column":9}},"16":{"start":{"line":36,"column":12},"end":{"line":36,"column":54}},"17":{"start":{"line":37,"column":12},"end":{"line":37,"column":44}},"18":{"start":{"line":39,"column":8},"end":{"line":39,"column":75}},"19":{"start":{"line":40,"column":8},"end":{"line":40,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":21},"end":{"line":12,"column":22}},"loc":{"start":{"line":12,"column":35},"end":{"line":14,"column":1}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":22},"end":{"line":19,"column":23}},"loc":{"start":{"line":19,"column":36},"end":{"line":42,"column":1}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":38},"end":{"line":34,"column":39}},"loc":{"start":{"line":34,"column":47},"end":{"line":41,"column":5}},"line":34}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":27,"column":5}},{"start":{"line":24,"column":4},"end":{"line":27,"column":5}}],"line":24},"1":{"loc":{"start":{"line":35,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":38,"column":9}},{"start":{"line":35,"column":8},"end":{"line":38,"column":9}}],"line":35}},"s":{"0":4,"1":4,"2":4,"3":4,"4":0,"5":4,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"f":{"0":0,"1":1,"2":0},"b":{"0":[1,0],"1":[0,0]},"inputSourceMap":{"version":3,"file":"contact.js","sourceRoot":"","sources":["contact.ts"],"names":[],"mappings":";;AACA,yCAAyC;AAEzC,MAAM,WAAW,GAAG,UAAU,CAAC,eAAe,CAAC;IAC7C,OAAO,EAAE,UAAU;IACnB,IAAI,EACA,EAAC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAC;CAC3E,CAAC,CAAC;AAEH;;;GAGG;AACQ,QAAA,UAAU,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACtD,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,CAAC;AAC5C,CAAC,CAAC;AAEF;;;GAGG;AACQ,QAAA,WAAW,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACvD,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC,QAAQ,EAAE,CAAC;IACtD,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,oBAAoB,CAAC,CAAC,OAAO,EAAE,CAAC;IACpD,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,yBAAyB,CAAC,CAAC,QAAQ,EAAE,CAAC;IAE5D,MAAM,MAAM,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;IAEtC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACX,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC5B,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAClC,CAAC;IAED,MAAM,WAAW,GAAG;QAClB,EAAE,EAAE,gBAAgB;QACpB,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG;QAC5C,OAAO,EAAE,cAAc;QACvB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;KACvB,CAAC;IAEF,WAAW,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,EAAE;QACxC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACR,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAC,GAAG,EAAE,GAAG,CAAC,OAAO,EAAC,CAAC,CAAC;YACxC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAClC,CAAC;QACD,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,EAAC,GAAG,EAAE,mCAAmC,EAAC,CAAC,CAAC;QACjE,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import {Request, Response} from 'express';\nimport * as nodemailer from 'nodemailer';\n\nconst transporter = nodemailer.createTransport({\n  service: 'SendGrid',\n  auth:\n      {user: process.env.SENDGRID_USER, pass: process.env.SENDGRID_PASSWORD}\n});\n\n/**\n * GET /contact\n * Contact form page.\n */\nexport let getContact = (req: Request, res: Response) => {\n  res.render('contact', {title: 'Contact'});\n};\n\n/**\n * POST /contact\n * Send a contact form via Nodemailer.\n */\nexport let postContact = (req: Request, res: Response) => {\n  req.assert('name', 'Name cannot be blank').notEmpty();\n  req.assert('email', 'Email is not valid').isEmail();\n  req.assert('message', 'Message cannot be blank').notEmpty();\n\n  const errors = req.validationErrors();\n\n  if (errors) {\n    req.flash('errors', errors);\n    return res.redirect('/contact');\n  }\n\n  const mailOptions = {\n    to: 'your@email.com',\n    from: `${req.body.name} <${req.body.email}>`,\n    subject: 'Contact Form',\n    text: req.body.message\n  };\n\n  transporter.sendMail(mailOptions, (err) => {\n    if (err) {\n      req.flash('errors', {msg: err.message});\n      return res.redirect('/contact');\n    }\n    req.flash('success', {msg: 'Email has been sent successfully!'});\n    res.redirect('/contact');\n  });\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"e3f0fb71b40b8af7c7259dea73dc17790a97ad7d"}
,"/Users/julianyang/Projects/test_heroku/src/controllers/home.ts": {"path":"/Users/julianyang/Projects/test_heroku/src/controllers/home.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":7,"column":0},"end":{"line":9,"column":2}},"2":{"start":{"line":8,"column":4},"end":{"line":8,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":16},"end":{"line":7,"column":17}},"loc":{"start":{"line":7,"column":30},"end":{"line":9,"column":1}},"line":7}},"branchMap":{},"s":{"0":4,"1":4,"2":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"home.js","sourceRoot":"","sources":["home.ts"],"names":[],"mappings":";;AAEA;;;GAGG;AACQ,QAAA,KAAK,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACjD,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,EAAC,KAAK,EAAE,MAAM,EAAC,CAAC,CAAC;AACtC,CAAC,CAAC","sourcesContent":["import {Request, Response} from 'express';\n\n/**\n * GET /\n * Home page.\n */\nexport let index = (req: Request, res: Response) => {\n  res.render('home', {title: 'Home'});\n};\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"40a12df7921564d694fbf72c8cbd462bd0809928"}
,"/Users/julianyang/Projects/test_heroku/src/models/db.ts": {"path":"/Users/julianyang/Projects/test_heroku/src/models/db.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":24},"end":{"line":5,"column":44}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":68}},"3":{"start":{"line":11,"column":13},"end":{"line":11,"column":30}},"4":{"start":{"line":15,"column":8},"end":{"line":17,"column":11}},"5":{"start":{"line":18,"column":8},"end":{"line":18,"column":26}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":61}},"7":{"start":{"line":22,"column":8},"end":{"line":22,"column":28}},"8":{"start":{"line":25,"column":8},"end":{"line":25,"column":31}},"9":{"start":{"line":28,"column":17},"end":{"line":28,"column":31}},"10":{"start":{"line":29,"column":0},"end":{"line":29,"column":38}},"11":{"start":{"line":31,"column":0},"end":{"line":31,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":18},"end":{"line":20,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":16},"end":{"line":23,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":19},"end":{"line":26,"column":5}},"line":24}},"branchMap":{},"s":{"0":4,"1":4,"2":4,"3":4,"4":4,"5":4,"6":4,"7":4,"8":4,"9":4,"10":4,"11":4},"f":{"0":4,"1":4,"2":4},"b":{},"inputSourceMap":{"version":3,"file":"db.js","sourceRoot":"","sources":["db.ts"],"names":[],"mappings":";;AAAA,4BAA4B;AAC5B,gCAAgC;AAChC,6CAA6C;AAG7C,OAAO,CAAC,GAAG,CAAC,4BAA4B,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;AAEpE,oBAAoB;AACpB,+EAA+E;AAC/E,6EAA6E;AAC7E,gEAAgE;AAEhE,+BAA+B;AAM/B;IAKE;QACE,mDAAmD;QACnD,IAAI,CAAC,UAAU,GAAG,IAAI,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE;YAC9D,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,GAAI,EAAsB,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IAED,SAAS;QACP,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,YAAY;QACV,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;CACF;AAED,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AACnB,QAAA,MAAM,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC;AAC3C,iDAAiD;AACpC,QAAA,SAAS,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC","sourcesContent":["// import * as fs from 'fs';\n// import * as path from 'path';\nimport * as SequelizeStatic from 'sequelize';\nimport {Sequelize} from 'sequelize';\n\nconsole.log(`Using DB connection url: ${process.env.DATABASE_URL}`);\n\n// code adapted from\n// https://github.com/sequelize/express-example/blob/master/models/index.js and\n// https://blog.hobbytrace.com/using-sequelize-with-express-js-in-typescript/\n// and https://github.com/suksant/sequelize-typescript-examples/\n\nimport * as User from './user';\n\nexport interface SequelizeModels {\n  User: SequelizeStatic.Model<User.UserInstance, User.UserAttributes>;\n}\n\nclass Database {\n  // private _basename: string;\n  private _models: SequelizeModels;\n  private _sequelize: Sequelize;\n\n  constructor() {\n    // this._basename = path.basename(module.filename);\n    this._sequelize = new SequelizeStatic(process.env.DATABASE_URL, {\n      dialect: 'postgres',\n    });\n    this._models = ({} as SequelizeModels);\n    this._models.User = User.defineUser(this._sequelize);\n  }\n\n  getModels() {\n    return this._models;\n  }\n\n  getSequelize() {\n    return this._sequelize;\n  }\n}\n\nconst database = new Database();\nexport const models = database.getModels();\n// export const User = database.getModels().User;\nexport const sequelize = database.getSequelize();\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"f3af1879f395bbe0f3d5671f5f404a198ec8da33"}
,"/Users/julianyang/Projects/test_heroku/src/models/user.ts": {"path":"/Users/julianyang/Projects/test_heroku/src/models/user.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":38}},"2":{"start":{"line":5,"column":17},"end":{"line":10,"column":62}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":16}},"4":{"start":{"line":13,"column":0},"end":{"line":13,"column":32}}},"fnMap":{"0":{"name":"defineUser","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":19}},"loc":{"start":{"line":4,"column":31},"end":{"line":12,"column":1}},"line":4}},"branchMap":{},"s":{"0":4,"1":4,"2":4,"3":4,"4":4},"f":{"0":4},"b":{},"inputSourceMap":{"version":3,"file":"user.js","sourceRoot":"","sources":["user.ts"],"names":[],"mappings":";;AAAA,uCAAuC;AAmBvC,oBAA2B,SAA8B;IACvD,MAAM,IAAI,GAAG,SAAS,CAAC,MAAM,CACzB,MAAM,EAAE;QACN,SAAS,EAAE,EAAC,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC;QACjE,oBAAoB,EAAE,SAAS,CAAC,IAAI;QACpC,+BAA+B,EAAE,SAAS,CAAC,IAAI;QAC/C,qBAAqB,EAAE,SAAS,CAAC,IAAI;KACtC,EACD,EAAC,OAAO,EAAE,CAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,WAAW,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;IACxD,MAAM,CAAC,IAAI,CAAC;AACd,CAAC;AAVD,gCAUC","sourcesContent":["import * as Sequelize from 'sequelize';\n\nexport interface UserAttributes {\n  google_id: string;\n  spotify_access_token?: string;\n  spotify_access_token_expiration?: Date;\n  spotify_refresh_token?: string;\n}\n\nexport interface UserInstance extends Sequelize.Instance<UserAttributes> {\n  id: number;\n  createdAt: Date;\n  updatedAt: Date;\n  google_id: string;\n  spotify_access_token?: string;\n  spotify_access_token_expiration?: Date;\n  spotify_refresh_token?: string;\n}\n\nexport function defineUser(sequelize: Sequelize.Sequelize) {\n  const user = sequelize.define<UserInstance, UserAttributes>(\n      'User', {\n        google_id: {type: Sequelize.TEXT, allowNull: false, unique: true},\n        spotify_access_token: Sequelize.TEXT,\n        spotify_access_token_expiration: Sequelize.DATE,\n        spotify_refresh_token: Sequelize.TEXT\n      },\n      {indexes: [{unique: true, fields: ['google_id']}]});\n  return user;\n}"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"b0aae0ba067e163bab2f794f57afb168f9802c0a"}
}
